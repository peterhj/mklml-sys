/* automatically generated by rust-bindgen */

pub const CBLAS_LAYOUT_CblasRowMajor: CBLAS_LAYOUT = 101;
pub const CBLAS_LAYOUT_CblasColMajor: CBLAS_LAYOUT = 102;
pub type CBLAS_LAYOUT = u32;
pub const CBLAS_TRANSPOSE_CblasNoTrans: CBLAS_TRANSPOSE = 111;
pub const CBLAS_TRANSPOSE_CblasTrans: CBLAS_TRANSPOSE = 112;
pub const CBLAS_TRANSPOSE_CblasConjTrans: CBLAS_TRANSPOSE = 113;
pub type CBLAS_TRANSPOSE = u32;
pub const CBLAS_UPLO_CblasUpper: CBLAS_UPLO = 121;
pub const CBLAS_UPLO_CblasLower: CBLAS_UPLO = 122;
pub type CBLAS_UPLO = u32;
pub const CBLAS_DIAG_CblasNonUnit: CBLAS_DIAG = 131;
pub const CBLAS_DIAG_CblasUnit: CBLAS_DIAG = 132;
pub type CBLAS_DIAG = u32;
pub const CBLAS_SIDE_CblasLeft: CBLAS_SIDE = 141;
pub const CBLAS_SIDE_CblasRight: CBLAS_SIDE = 142;
pub type CBLAS_SIDE = u32;
pub const CBLAS_STORAGE_CblasPacked: CBLAS_STORAGE = 151;
pub type CBLAS_STORAGE = u32;
pub const CBLAS_IDENTIFIER_CblasAMatrix: CBLAS_IDENTIFIER = 161;
pub const CBLAS_IDENTIFIER_CblasBMatrix: CBLAS_IDENTIFIER = 162;
pub type CBLAS_IDENTIFIER = u32;
pub const CBLAS_OFFSET_CblasRowOffset: CBLAS_OFFSET = 171;
pub const CBLAS_OFFSET_CblasColOffset: CBLAS_OFFSET = 172;
pub const CBLAS_OFFSET_CblasFixOffset: CBLAS_OFFSET = 173;
pub type CBLAS_OFFSET = u32;
pub use self::CBLAS_LAYOUT as CBLAS_ORDER;
extern "C" {
    #[link_name = "\u{1}_cblas_sdot"]
    pub fn cblas_sdot(
        N: ::std::os::raw::c_int,
        X: *const f32,
        incX: ::std::os::raw::c_int,
        Y: *const f32,
        incY: ::std::os::raw::c_int,
    ) -> f32;
}
extern "C" {
    #[link_name = "\u{1}_cblas_ddot"]
    pub fn cblas_ddot(
        N: ::std::os::raw::c_int,
        X: *const f64,
        incX: ::std::os::raw::c_int,
        Y: *const f64,
        incY: ::std::os::raw::c_int,
    ) -> f64;
}
extern "C" {
    #[link_name = "\u{1}_cblas_snrm2"]
    pub fn cblas_snrm2(N: ::std::os::raw::c_int, X: *const f32, incX: ::std::os::raw::c_int)
        -> f32;
}
extern "C" {
    #[link_name = "\u{1}_cblas_dnrm2"]
    pub fn cblas_dnrm2(N: ::std::os::raw::c_int, X: *const f64, incX: ::std::os::raw::c_int)
        -> f64;
}
extern "C" {
    #[link_name = "\u{1}_cblas_saxpy"]
    pub fn cblas_saxpy(
        N: ::std::os::raw::c_int,
        alpha: f32,
        X: *const f32,
        incX: ::std::os::raw::c_int,
        Y: *mut f32,
        incY: ::std::os::raw::c_int,
    );
}
extern "C" {
    #[link_name = "\u{1}_cblas_daxpy"]
    pub fn cblas_daxpy(
        N: ::std::os::raw::c_int,
        alpha: f64,
        X: *const f64,
        incX: ::std::os::raw::c_int,
        Y: *mut f64,
        incY: ::std::os::raw::c_int,
    );
}
extern "C" {
    #[link_name = "\u{1}_cblas_sscal"]
    pub fn cblas_sscal(
        N: ::std::os::raw::c_int,
        alpha: f32,
        X: *mut f32,
        incX: ::std::os::raw::c_int,
    );
}
extern "C" {
    #[link_name = "\u{1}_cblas_dscal"]
    pub fn cblas_dscal(
        N: ::std::os::raw::c_int,
        alpha: f64,
        X: *mut f64,
        incX: ::std::os::raw::c_int,
    );
}
extern "C" {
    #[link_name = "\u{1}_cblas_sgemv"]
    pub fn cblas_sgemv(
        Layout: CBLAS_LAYOUT,
        TransA: CBLAS_TRANSPOSE,
        M: ::std::os::raw::c_int,
        N: ::std::os::raw::c_int,
        alpha: f32,
        A: *const f32,
        lda: ::std::os::raw::c_int,
        X: *const f32,
        incX: ::std::os::raw::c_int,
        beta: f32,
        Y: *mut f32,
        incY: ::std::os::raw::c_int,
    );
}
extern "C" {
    #[link_name = "\u{1}_cblas_dgemv"]
    pub fn cblas_dgemv(
        Layout: CBLAS_LAYOUT,
        TransA: CBLAS_TRANSPOSE,
        M: ::std::os::raw::c_int,
        N: ::std::os::raw::c_int,
        alpha: f64,
        A: *const f64,
        lda: ::std::os::raw::c_int,
        X: *const f64,
        incX: ::std::os::raw::c_int,
        beta: f64,
        Y: *mut f64,
        incY: ::std::os::raw::c_int,
    );
}
extern "C" {
    #[link_name = "\u{1}_cblas_sgemm"]
    pub fn cblas_sgemm(
        Layout: CBLAS_LAYOUT,
        TransA: CBLAS_TRANSPOSE,
        TransB: CBLAS_TRANSPOSE,
        M: ::std::os::raw::c_int,
        N: ::std::os::raw::c_int,
        K: ::std::os::raw::c_int,
        alpha: f32,
        A: *const f32,
        lda: ::std::os::raw::c_int,
        B: *const f32,
        ldb: ::std::os::raw::c_int,
        beta: f32,
        C: *mut f32,
        ldc: ::std::os::raw::c_int,
    );
}
extern "C" {
    #[link_name = "\u{1}_cblas_dgemm"]
    pub fn cblas_dgemm(
        Layout: CBLAS_LAYOUT,
        TransA: CBLAS_TRANSPOSE,
        TransB: CBLAS_TRANSPOSE,
        M: ::std::os::raw::c_int,
        N: ::std::os::raw::c_int,
        K: ::std::os::raw::c_int,
        alpha: f64,
        A: *const f64,
        lda: ::std::os::raw::c_int,
        B: *const f64,
        ldb: ::std::os::raw::c_int,
        beta: f64,
        C: *mut f64,
        ldc: ::std::os::raw::c_int,
    );
}
